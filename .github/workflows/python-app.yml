name: Pi

on:
  push:
    paths-ignore:
      - 'README.md'
  schedule:
    - cron: 0 * * * *
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      on: ${{ github.event_name }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ./tokens.txt
          key: build-${{ github.run_id }}
          restore-keys: |
            build-
      - name: Set proxy
        env:
          config: ${{ secrets.ss_config }}
        run: |
          sudo apt-get install shadowsocks-libev simple-obfs proxychains-ng
          sudo -E sh -c 'echo $config|base64 -d > /etc/shadowsocks-libev/config.json'
          sudo sh -c 'echo "\
          [Unit]
          Description=Shadowsocks
          After=network.target
          [Service]
          ExecStart=ss-local -c /etc/shadowsocks-libev/config.json
          Rnestart=on-abort
          [Install]
          WantedBy=multi-user.target\
          ">/etc/systemd/system/shadowsocks.service'
          sudo systemctl daemon-reload
          sudo systemctl start shadowsocks
          sleep 3s
          systemctl status --no-pager shadowsocks
          sudo sed -i 's/socks4 	127.0.0.1 9050/socks5 127.0.0.1 1080/g' /etc/proxychains4.conf
          sudo sed -i 's/#quiet_mode/quiet_mode/g' /etc/proxychains4.conf
      - name: Account 1
        if: always()
        env:
          userpass: ${{ secrets.userpass1 }}
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: proxychains python -u pi.py
      - name: Account 5
        if: always()
        env:
          userpass: ${{ secrets.userpass5 }}
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: proxychains python -u pi.py
      - name: Account 6
        if: always()
        env:
          userpass: ${{ secrets.userpass6 }}
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: proxychains python -u pi.py
      - uses: gautamkrishnar/keepalive-workflow@master
